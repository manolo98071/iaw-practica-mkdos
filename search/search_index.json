{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Practica-Prestashop/","text":"Pr\u00e1ctica Prestashop: Instalaci\u00f3n de PrestaShop usando contenedores Docker y Docker Compose En esta pr\u00e1ctica tendremos que realizar la implantaci\u00f3n de un sitio PrestaShop en Amazon Web Services (AWS) haciendo uso de contenedores Docker y la herramienta Docker Compose. Requisitos de la m\u00e1quina virtual Amazon EC2. Debemos asegurarnos de que la m\u00e1quina disponga de: 2 GB de memoria RAM. Asignamos 20 GB de almacenamiento en el disco duro. Instalaci\u00f3n y configuraci\u00f3n de Docker y Docker compose En primer lugar deberemos instalar Docker, para ello ejecutamos el script docker.sh , el cu\u00e1l descarga Docker, a\u00f1ade nuestro usuario al grupo Docker, inicia el servicio Docker y lo configura para que el servicio se inicie autom\u00e1ticamente. Antes de continuar es importante actualizar el grupo de Docker, para ello deberemos abrir un terminal y ejecutar: newgrp docker Debemos de instalar en un terminal la herramienta Docker-compose, para ello ejecutamos: sudo apt install docker-compose Archivo docker-compose.yml para desplegar los servicios de PrestaShop, MySQL y phpMyAdmin. Docker-compose nos permite crear un archivo de configuracion para que mediante un comando levantemos toda la infraestructura que tenemos creada dentro del archivo docker-compose.yml. Creamos el archivo docker-compose.yml con los servicios Prestashop, MySQL, PHPMyAdmin y HTTPS-Portal (esta imagen est\u00e1 preparada para permitir que cualquier aplicaci\u00f3n web pueda ejecutarse a trav\u00e9s de HTTPS) y su configuraci\u00f3n. Para poner en marcha los servicios, ejecutamos en un terminal: docker-compose up -d Si queremos detenerlos el comando es el siguiente: docker compose down -v En el archivo .env se almacenan las variables requeridas para lanzar los servicios del archivo docker-compose.yml Comprobamos el acceso Accedemos a nuestro dominio https://iawprestashop.ddns.net y vemos que tenemos acceso a PrestaShop: Para iniciar sesi\u00f3n, accedemos a nuestro dominio/administration, donde iniciaremos sesi\u00f3n con el correo electr\u00f3nico y contrase\u00f1a definidos en las variables del archivo .env:","title":"Practica-Prestashop"},{"location":"Practica-Prestashop/#practica-prestashop-instalacion-de-prestashop-usando-contenedores-docker-y-docker-compose","text":"En esta pr\u00e1ctica tendremos que realizar la implantaci\u00f3n de un sitio PrestaShop en Amazon Web Services (AWS) haciendo uso de contenedores Docker y la herramienta Docker Compose. Requisitos de la m\u00e1quina virtual Amazon EC2. Debemos asegurarnos de que la m\u00e1quina disponga de: 2 GB de memoria RAM. Asignamos 20 GB de almacenamiento en el disco duro.","title":"Pr\u00e1ctica Prestashop: Instalaci\u00f3n de PrestaShop usando contenedores Docker y Docker Compose"},{"location":"Practica-Prestashop/#instalacion-y-configuracion-de-docker-y-docker-compose","text":"En primer lugar deberemos instalar Docker, para ello ejecutamos el script docker.sh , el cu\u00e1l descarga Docker, a\u00f1ade nuestro usuario al grupo Docker, inicia el servicio Docker y lo configura para que el servicio se inicie autom\u00e1ticamente. Antes de continuar es importante actualizar el grupo de Docker, para ello deberemos abrir un terminal y ejecutar: newgrp docker Debemos de instalar en un terminal la herramienta Docker-compose, para ello ejecutamos: sudo apt install docker-compose","title":"Instalaci\u00f3n y configuraci\u00f3n de Docker y Docker compose"},{"location":"Practica-Prestashop/#archivo-docker-composeyml-para-desplegar-los-servicios-de-prestashop-mysql-y-phpmyadmin","text":"Docker-compose nos permite crear un archivo de configuracion para que mediante un comando levantemos toda la infraestructura que tenemos creada dentro del archivo docker-compose.yml. Creamos el archivo docker-compose.yml con los servicios Prestashop, MySQL, PHPMyAdmin y HTTPS-Portal (esta imagen est\u00e1 preparada para permitir que cualquier aplicaci\u00f3n web pueda ejecutarse a trav\u00e9s de HTTPS) y su configuraci\u00f3n. Para poner en marcha los servicios, ejecutamos en un terminal: docker-compose up -d Si queremos detenerlos el comando es el siguiente: docker compose down -v En el archivo .env se almacenan las variables requeridas para lanzar los servicios del archivo docker-compose.yml","title":"Archivo docker-compose.yml para desplegar los servicios de PrestaShop, MySQL y phpMyAdmin."},{"location":"Practica-Prestashop/#comprobamos-el-acceso","text":"Accedemos a nuestro dominio https://iawprestashop.ddns.net y vemos que tenemos acceso a PrestaShop: Para iniciar sesi\u00f3n, accedemos a nuestro dominio/administration, donde iniciaremos sesi\u00f3n con el correo electr\u00f3nico y contrase\u00f1a definidos en las variables del archivo .env:","title":"Comprobamos el acceso"},{"location":"Practica15/","text":"Pr\u00e1ctica 15 : Instalaci\u00f3n de WordPress usando contenedores Docker y Docker Compose. En esta pr\u00e1ctica tendremos que realizar la implantaci\u00f3n de un sitio WordPress en Amazon Web Services (AWS) haciendo uso de contenedores Docker y la herramienta Docker Compose. Instalaci\u00f3n y configuraci\u00f3n de Docker y Docker compose En primer lugar deberemos instalar Docker, para ello ejecutamos el script docker.sh, el cu\u00e1l descarga Docker, a\u00f1ade nuestro usuario al grupo Docker, inicia el servicio Docker y lo configura para que el servicio se inicie autom\u00e1ticamente. Antes de continuar es importante actualizar el grupo de Docker, para ello deberemos abrir un terminal y ejecutar: newgrp docker Debemos de instalar en un terminal la herramienta Docker-compose, para ello ejecutamos: sudo apt install docker-compose Archivo docker-compose.yml para desplegar los servicios de WordPress, MySQL y phpMyAdmin Docker-compose nos permite crear un archivo de configuracion para que mediante un comando levantemos toda la infraestructura que tenemos creada dentro del archivo docker-compose.yml. Creamos el archivo docker-compose.yml con los servicios Wordpress, MySQL, PHPMyAdmin y HTTPS-Portal (esta imagen est\u00e1 preparada para permitir que cualquier aplicaci\u00f3n web pueda ejecutarse a trav\u00e9s de HTTPS) y su configuraci\u00f3n. Para poner en marcha los servicios, ejecutamos en un terminal: docker-compose up -d Si queremos detenerlos el comando es el siguiente: docker compose down -v En el archivo .env se almacenan las variables requeridas para lanzar los servicios del archivo docker-compose.yml Comprobamos el acceso Accedemos a nuestro dominio iawpractica15.ddns.net y nos encontramos con la instalaci\u00f3n de Wordpress:","title":"Practica15"},{"location":"Practica15/#practica-15-instalacion-de-wordpress-usando-contenedores-docker-y-docker-compose","text":"En esta pr\u00e1ctica tendremos que realizar la implantaci\u00f3n de un sitio WordPress en Amazon Web Services (AWS) haciendo uso de contenedores Docker y la herramienta Docker Compose.","title":"Pr\u00e1ctica 15: Instalaci\u00f3n de WordPress usando contenedores Docker y Docker Compose."},{"location":"Practica15/#instalacion-y-configuracion-de-docker-y-docker-compose","text":"En primer lugar deberemos instalar Docker, para ello ejecutamos el script docker.sh, el cu\u00e1l descarga Docker, a\u00f1ade nuestro usuario al grupo Docker, inicia el servicio Docker y lo configura para que el servicio se inicie autom\u00e1ticamente. Antes de continuar es importante actualizar el grupo de Docker, para ello deberemos abrir un terminal y ejecutar: newgrp docker Debemos de instalar en un terminal la herramienta Docker-compose, para ello ejecutamos: sudo apt install docker-compose","title":"Instalaci\u00f3n y configuraci\u00f3n de Docker y Docker compose"},{"location":"Practica15/#archivo-docker-composeyml-para-desplegar-los-servicios-de-wordpress-mysql-y-phpmyadmin","text":"Docker-compose nos permite crear un archivo de configuracion para que mediante un comando levantemos toda la infraestructura que tenemos creada dentro del archivo docker-compose.yml. Creamos el archivo docker-compose.yml con los servicios Wordpress, MySQL, PHPMyAdmin y HTTPS-Portal (esta imagen est\u00e1 preparada para permitir que cualquier aplicaci\u00f3n web pueda ejecutarse a trav\u00e9s de HTTPS) y su configuraci\u00f3n. Para poner en marcha los servicios, ejecutamos en un terminal: docker-compose up -d Si queremos detenerlos el comando es el siguiente: docker compose down -v En el archivo .env se almacenan las variables requeridas para lanzar los servicios del archivo docker-compose.yml","title":"Archivo docker-compose.yml para desplegar los servicios de WordPress, MySQL y phpMyAdmin"},{"location":"Practica15/#comprobamos-el-acceso","text":"Accedemos a nuestro dominio iawpractica15.ddns.net y nos encontramos con la instalaci\u00f3n de Wordpress:","title":"Comprobamos el acceso"},{"location":"inicio/","text":"Bienvenido al blog Mkdocs de Manuel Crisol En este blog se recogen las pr\u00e1cticas realizadas en la asignatura IAW: Adem\u00e1s se meusyra la gu\u00eda de algunas de ellas Pr\u00e1ctica 1 LAMP Stack. slides | pdf Instalaci\u00f3n de la pila LAMP en una m\u00e1quina virtual. slides | pdf Pr\u00e1ctica 2 Implantaci\u00f3n de una aplicaci\u00f3n web LAMP en Amazon Web Services (AWS). slides | pdf Pr\u00e1ctica: HTTPS con Let\u2019s Encrypt y Certbot HTTPS con Let\u2019s Encrypt y Certbot. slides | pdf Pr\u00e1ctica 3 Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles. slides | pdf Pr\u00e1ctica 4 Creaci\u00f3n de una segunda m\u00e1quina virtual para Apache. slides | pdf Pr\u00e1ctica 5 Balanceador de carga con Apache. slides | pdf Pr\u00e1ctica: AWS CLI AWS CLI (Command Line Interface). slides | pdf Pr\u00e1ctica 6 LEMP Stack. slides | pdf Arquitectura de una aplicaci\u00f3n web LEMP en dos niveles. slides | pdf Pr\u00e1ctica 7 Balanceador de carga con Nginx. slides | pdf Pr\u00e1ctica 8 Implantaci\u00f3n de Wordpress en Amazon Web Services (AWS) sobre la pila LAMP. slides | pdf Pr\u00e1ctica 9 Implantaci\u00f3n de Wordpress en Amazon Web Services (AWS) sobre la pila LEMP. slides | pdf Pr\u00e1ctica: WordPress en alta disponibilidad en AWS Instalaci\u00f3n de WordPress en alta disponibilidad en AWS Pr\u00e1ctica: WP-CLI Administraci\u00f3n de Wordpress con la utilidad WP-CLI. slides | pdf Pr\u00e1ctica 10 Personalizaci\u00f3n de WordPress. slides | pdf Pr\u00e1ctica 11 Auditor\u00eda de seguridad en WordPress. slides | pdf Pr\u00e1ctica: Hardening WordPress Hardening WordPress. slides | pdf Pr\u00e1ctica 12 Amazon Machine Image (AMI) de Bitnami para WordPress. slides | pdf Pr\u00e1ctica 13 Instalaci\u00f3n de WordPress con Bitnami. slides | pdf Pr\u00e1ctica 14 Instalaci\u00f3n de ownCloud con Bitnami. slides | pdf Pr\u00e1ctica 15 Instalaci\u00f3n de WordPress usando contenedores Docker y Docker Compose. slides | pdf Pr\u00e1ctica PrestaShop Instalaci\u00f3n de PrestaShop usando contenedores Docker y Docker Compose. slides | pdf Pr\u00e1ctica 16 \u00abDockerizar\u00bb una aplicaci\u00f3n LAMP. slides | pdf Pr\u00e1ctica 17 Balanceo de carga con HAProxy. slides | pdf Pr\u00e1ctica 18 IoT (Internet of Things) con MQTT, Grafana, InfluxDB y Telegraf. Pr\u00e1ctica: HTTPS con Let\u2019s Encrypt, Docker y Docker Compose HTTPS con Let\u2019s Encrypt, Docker y Docker Compose. slides | pdf Pr\u00e1ctica Docker Curso de introducci\u00f3n a Docker. Pr\u00e1ctica Ansible Primeros pasos con Ansible y AWS. Pr\u00e1ctica Vagrant (Antiguo) Vagrant. slides | pdf Pr\u00e1cticas de desarrollo web P\u00e1ginas est\u00e1ticas Pr\u00e1ctica 1: Git y GitHub Pr\u00e1ctica 2: Creaci\u00f3n de blogs con Jekyll y GitHub Pages. slides | pdf Pr\u00e1ctica 3: Creaci\u00f3n de sitios web con MkDocs y GitHub Pages. slides | pdf PHP Pr\u00e1cticas de introducci\u00f3n a PHP. slides | pdf","title":"Principal"},{"location":"inicio/#bienvenido-al-blog-mkdocs-de-manuel-crisol","text":"En este blog se recogen las pr\u00e1cticas realizadas en la asignatura IAW: Adem\u00e1s se meusyra la gu\u00eda de algunas de ellas","title":"Bienvenido al blog Mkdocs de Manuel Crisol"},{"location":"inicio/#practica-1","text":"LAMP Stack. slides | pdf Instalaci\u00f3n de la pila LAMP en una m\u00e1quina virtual. slides | pdf","title":"Pr\u00e1ctica 1"},{"location":"inicio/#practica-2","text":"Implantaci\u00f3n de una aplicaci\u00f3n web LAMP en Amazon Web Services (AWS). slides | pdf Pr\u00e1ctica: HTTPS con Let\u2019s Encrypt y Certbot HTTPS con Let\u2019s Encrypt y Certbot. slides | pdf","title":"Pr\u00e1ctica 2"},{"location":"inicio/#practica-3","text":"Arquitectura de una aplicaci\u00f3n web LAMP en dos niveles. slides | pdf","title":"Pr\u00e1ctica 3"},{"location":"inicio/#practica-4","text":"Creaci\u00f3n de una segunda m\u00e1quina virtual para Apache. slides | pdf","title":"Pr\u00e1ctica 4"},{"location":"inicio/#practica-5","text":"Balanceador de carga con Apache. slides | pdf Pr\u00e1ctica: AWS CLI AWS CLI (Command Line Interface). slides | pdf","title":"Pr\u00e1ctica 5"},{"location":"inicio/#practica-6","text":"LEMP Stack. slides | pdf Arquitectura de una aplicaci\u00f3n web LEMP en dos niveles. slides | pdf","title":"Pr\u00e1ctica 6"},{"location":"inicio/#practica-7","text":"Balanceador de carga con Nginx. slides | pdf","title":"Pr\u00e1ctica 7"},{"location":"inicio/#practica-8","text":"Implantaci\u00f3n de Wordpress en Amazon Web Services (AWS) sobre la pila LAMP. slides | pdf","title":"Pr\u00e1ctica 8"},{"location":"inicio/#practica-9","text":"Implantaci\u00f3n de Wordpress en Amazon Web Services (AWS) sobre la pila LEMP. slides | pdf","title":"Pr\u00e1ctica 9"},{"location":"inicio/#practica-wordpress-en-alta-disponibilidad-en-aws","text":"Instalaci\u00f3n de WordPress en alta disponibilidad en AWS","title":"Pr\u00e1ctica: WordPress en alta disponibilidad en AWS"},{"location":"inicio/#practica-wp-cli","text":"Administraci\u00f3n de Wordpress con la utilidad WP-CLI. slides | pdf","title":"Pr\u00e1ctica: WP-CLI"},{"location":"inicio/#practica-10","text":"Personalizaci\u00f3n de WordPress. slides | pdf","title":"Pr\u00e1ctica 10"},{"location":"inicio/#practica-11","text":"Auditor\u00eda de seguridad en WordPress. slides | pdf","title":"Pr\u00e1ctica 11"},{"location":"inicio/#practica-hardening-wordpress","text":"Hardening WordPress. slides | pdf","title":"Pr\u00e1ctica: Hardening WordPress"},{"location":"inicio/#practica-12","text":"Amazon Machine Image (AMI) de Bitnami para WordPress. slides | pdf","title":"Pr\u00e1ctica 12"},{"location":"inicio/#practica-13","text":"Instalaci\u00f3n de WordPress con Bitnami. slides | pdf","title":"Pr\u00e1ctica 13"},{"location":"inicio/#practica-14","text":"Instalaci\u00f3n de ownCloud con Bitnami. slides | pdf","title":"Pr\u00e1ctica 14"},{"location":"inicio/#practica-15","text":"Instalaci\u00f3n de WordPress usando contenedores Docker y Docker Compose. slides | pdf","title":"Pr\u00e1ctica 15"},{"location":"inicio/#practica-prestashop","text":"Instalaci\u00f3n de PrestaShop usando contenedores Docker y Docker Compose. slides | pdf","title":"Pr\u00e1ctica PrestaShop"},{"location":"inicio/#practica-16","text":"\u00abDockerizar\u00bb una aplicaci\u00f3n LAMP. slides | pdf","title":"Pr\u00e1ctica 16"},{"location":"inicio/#practica-17","text":"Balanceo de carga con HAProxy. slides | pdf","title":"Pr\u00e1ctica 17"},{"location":"inicio/#practica-18","text":"IoT (Internet of Things) con MQTT, Grafana, InfluxDB y Telegraf.","title":"Pr\u00e1ctica 18"},{"location":"inicio/#practica-https-con-lets-encrypt-docker-y-docker-compose","text":"HTTPS con Let\u2019s Encrypt, Docker y Docker Compose. slides | pdf","title":"Pr\u00e1ctica: HTTPS con Let\u2019s Encrypt, Docker y Docker Compose"},{"location":"inicio/#practica-docker","text":"Curso de introducci\u00f3n a Docker.","title":"Pr\u00e1ctica Docker"},{"location":"inicio/#practica-ansible","text":"Primeros pasos con Ansible y AWS.","title":"Pr\u00e1ctica Ansible"},{"location":"inicio/#practica-vagrant-antiguo","text":"Vagrant. slides | pdf","title":"Pr\u00e1ctica Vagrant (Antiguo)"},{"location":"inicio/#practicas-de-desarrollo-web","text":"","title":"Pr\u00e1cticas de desarrollo web"},{"location":"inicio/#paginas-estaticas","text":"Pr\u00e1ctica 1: Git y GitHub Pr\u00e1ctica 2: Creaci\u00f3n de blogs con Jekyll y GitHub Pages. slides | pdf Pr\u00e1ctica 3: Creaci\u00f3n de sitios web con MkDocs y GitHub Pages. slides | pdf","title":"P\u00e1ginas est\u00e1ticas"},{"location":"inicio/#php","text":"Pr\u00e1cticas de introducci\u00f3n a PHP. slides | pdf","title":"PHP"}]}